[pytest]
minversion = 6.0
addopts = -v --tb=short --strict-markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    model: marks tests as model tests
    data: marks tests as data processing tests
    skip: marks tests to skip
    xfail: marks tests as expected to fail
    serial: marks tests that must run serially
    parallel: marks tests that can run in parallel

testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Coverage configuration
[coverage:run]
source = src
branch = True
omit = 
    */tests/*
    */test_*
    */conftest.py
    */__init__.py
    */setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if self.debug:
    if settings.DEBUG
    raise
    except ImportError
    if 0:
    if False:

[coverage:html]
directory = htmlcov

# Logging configuration
[tool:pytest]
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# JUnit configuration
junit_family = xunit2

# Async configuration
asyncio_mode = auto

# Warnings configuration
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::ResourceWarning

# Custom configuration
xfail_strict = true
strict_config = true
strict_markers = true

# Test discovery
norecursedirs = 
    .git
    .tox
    .env
    venv
    node_modules
    build
    dist
    *.egg-info

# Performance
faulthandler_timeout = 300

# Debugging
pdb = false
pdbcls = 

# Output
tbstyle = short
verbose = 1

# Plugins
required_plugins = 
    pytest-mock
    pytest-cov
    pytest-asyncio
    pytest-html
    pytest-xdist

# HTML report
[tool:pytest-html]
self-contained-html = true

# Xdist configuration
[tool:pytest-xdist]
testrunuid = 

# Cov configuration
[tool:pytest-cov]

# Asyncio configuration
[tool:pytest-asyncio]

# Mock configuration
[tool:pytest-mock]

# Capture configuration
capture = fd

# Duration configuration
durations = 10

# Stepwise configuration
stepwise = false

# Setup configuration
setuponly = false
setupshow = false

# Cache configuration
cache_dir = .pytest_cache

# Random configuration
randomly_seed = 12345
randomly_execute = false

# Forked configuration
forked = false

# Timeout configuration
timeout = 300

# Flake8 configuration (if using pytest-flake8)
[tool:flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude = 
    .git,
    __pycache__,
    venv,
    .venv,
    build,
    dist,
    *.egg-info,
    .tox,
    .eggs,
    .mypy_cache,
    .pytest_cache,
    .coverage,
    htmlcov,
    .idea,
    .vscode,
    .github,
    .gitlab,
    .circleci,
    .travis

# Black configuration (if using pytest-black)
[tool:black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)'''

# Isort configuration (if using pytest-isort)
[tool:isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = src,tests
known_third_party = fastapi,joblib,numpy,pandas,pydantic,pytest,scikit_learn,sklearn,uvicorn,yaml

# Mypy configuration (if using pytest-mypy)
[tool:mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
ignore_missing_imports = True

# Bandit configuration (if using pytest-bandit)
[tool:bandit]
skips = 
    B101,B104,B105,B106,B107,B110,B301,B302,B303,B304,B305,B306,B307,B310,B311,B312,B313,B314,B315,B316,B317,B318,B319,B320,B321,B322,B323,B324,B401,B402,B403,B404,B405,B406,B407,B408,B409,B410,B411,B412,B413,B501,B502,B503,B504,B505,B506,B507,B601,B602,B603,B604,B605,B606,B607,B608,B609,B610,B611,B612,B701,B702,B703

# Safety configuration (if using pytest-safety)
[tool:safety]
